import ipdb
dbg = ipdb.set_trace


from collections import Counter

def isMaxLettersExceeded(word,maxLetters):
    if maxLetters < len(Counter([c for c in word]).keys()):
        return True
    else:
        return False    

class Solution(object):
    def maxFreq(self, s, maxLetters, minSize, maxSize):
        """
        :type s: str
        :type maxLetters: int
        :type minSize: int
        :type maxSize: int
        :rtype: int
        """
        string = s
        subs = dict()
        
        """
        At index i
        subs[i] = fn(subs[i-1], [s[i-minSize+1:i+1], ... s[i-maxSize+1:i+1]])
        where
        fn(subs, words):
        """
        nstr = len(string)
        if minSize > nstr:
            return 0

        for ind in range(minSize-1,nstr):
            #dbg()
            words = []
            for sz in range(minSize, minSize+1): #maxSize+1):
                if ind-sz+1 >= 0:
                    words.append(string[ind-sz+1:ind+1])
                else:
                    break
            #dbg()

            for w in words:
                if not(isMaxLettersExceeded(w,maxLetters)):
                    if w in subs:
                        subs[w]+=1
                    else:
                        subs[w]=1
                else:
                    break

        #dbg()
        if subs:
            return Counter(subs).most_common(1)[0][1]
        else:
            return 0

string="bekdfggeafgajehfjkeaifchakbhfkgbegbghdfihkigdiiaichckkjfhcicejciegdbhejbfcjccaiehhdbaeaikjgjdfefiheegbhjihcjadkbadbaaigibhkjhibdfjkfbbkdcjfahgbekijigefddebbejadeckgciiiibefadjibgaecjiibdbkffdfdkfcbafhcadfghbcgiddddbbbfddigeiaegfjaabhcffbaafjcfigjgdfkjjhigghahggkebabikjbhhfhcbbhdkcjdfkbeigdeaabeadgcfeiekjkgcghbdkbckdhkebgeikefajfbkhcgggcgakbgddgbkkjdakjjchckhegffkfjjfaiecghkgfajdaahdadbadedhkhbedffjdaehgehfakhaejiagfkhkjkgaebkgfbaaikfafkkabackjaafggihkeehhkjkacgighaafiaigadgcfiigdbdjggbfcaicjjjkcebffekijgedihegdiecjddjfiiajcffedibhibbcbkabiahhihkhcakgdikcdkfdhfjbadbhfkcfjbgdfkkfijabfdjeaifcifaddfejjckhbkfiaadhkhfhfkdcgjbjabkaibjeikaikgfeeeaifjggjcjjffbdhgdechckgifchafgjdkkacdgjakkjjbcdcadjfagfbddeejehhgkfekkdaekeccgbedbhcjjjidjcheaceedhjgdfjgaeiedgdiaefhbiafahfgjifaeaifchekefciijdfckbbdcchgabahbchgidddhbkachkfgeicfcbbijjefjgagihijfdhijbcdcjbhbgcjajkifjccckdchedbajfgfkjidfbhhahbdgcfikhekgcjabfiicjiddhiheeheidfigaidfbckabekbabkcgiijbhjbbgdhkjgeehjeacejjhfjkkekhicajffcaihjjgaahcfiihdgghkcfdahkeikbachjficjdfahghdkbajidfdgdbgdacabbjiiaikhjecadffgajecekeffdfffbdikbfeccgcaabfgfkceebibggdaidjcgkebekddkcbgfhacdikaidbjjhgaeaibffiggfagkhacikghdfaebbgkekhhjjhjdhjedbciehfbikdifdkhdijachdbkbcfjhhfjdfiajkifbfdhdjdjckkaadfejbfbggcaehgkdbbedhjeihaheggahcfdcgbjjfkfjdieddbhhhchkigkcgdjfadcdjiejffdkdggfibjchbbbgkgbhbbfiiihdfdaffgahaafajjedcggbjaidadhfhcdegjkdbdfdjjcekcbdfehkkcejhhgfhfhgiaabcckicbhbfbfaakidabjhjjbgkihachgajcakadkdjdcdeikdbfakjjchidgjhjbbfabckeeahbhkikhfgbkjihdafjkbdihhhhdhigdkcaaadibfdahkfffhjibgchdegbfbfdahccfjiagihfbfgaiihkfdagjjgbgegbgfjihfeadcbdhihaagbaikbdfabjeifjdgbhhifkebakfbaeahbjebifkiekbkkekdceegdhbaegbbgiadkgcjgbfaddacfehgkfkabkggfhcagihbckkdgkbdbiijjcfgaehdgkgcgagafjkgcfkbjkjkjfgjjkhgbijbgifaabaikdakgcakggbbbgfeieekjjcdahieadbbjbffcffebkckdhchihefccfkhhgificcgebjckjegjkchfechkcfggfchbcgbcegfhhkcbbcbfieeecicegfdjfgheebjbifbdhighfhbgacgecgeejhaikcbkjibkcgcaceiigdhjheekbhkghbfjigdkdebjbikhgaciggijeifbjibdkdcdaicgkkeeaffbebdaejjdedcjbhijheeghbikfebdebgfhjjekkgabidejddgdececcajkbigjdgbjeagegikjiagcfgaajihjdhhjagfjigkbddcjdggfhebcgkicbjdbddieggkfhecajkakidcikghiddfgacebeagdihedhaekgbbciabhakbcdjdjhdegjkgkckjbjceiiakgejkefdeckbeikiikcfjdceekaebhebakdeghkhaikekkhkiecjhkkgejebebfajhaaibicjbjaehdggikaefehkcgdkijjkibbkbggefabkjhehgfkgbjijkhffihjkdghddhkhgigdbcccghfighdjgcciejajedhcakjhefddghkaadebbgdfgkabgibbehkgkjfiififkfbhddfhbejbkbkhghikgijjdhbjfaeghebgjfhfheeggfkbakfjkdkaghebejdgefifbghbeejaikjgdddkfakiifficaebjfcjfjgkchdbkidbccbdifdeacaahhkabdaffihfdikcidghbdihjackjcekahbagbkchkcbiceedbbddkddigdebdagafcihidjjekdajkgfjfaaikcbjkcjeahihcijabkbfddifhhehcbgkabdgcbfgekhgjjiickfehddbkijajecgddjicaiffbfcidhffbbkjkgfdgbckibgbbdjbbfggafkbbkjbbkagaifhgdfgbccfebfjigbdgbcfiedhdebcibfkcbbkkihdkihedhiicjbfcfcfkaahibfgiadgbigkajfaibbcjbeajgkjijdgfjkbkfgehefjdcihcgkghhcgkkgfbkfjcadcfiafkkkkfkigjgkjaididgikkhcdidbkkhgbheiedaijfcdceihjadggikfbigddfceeafcddeckdjakcffchfkhhhbkjchihfgkfbdbejkedddajdaedgffkbjabgcbekcifijibkceekdfaiaafahfaajfabkgabbckdfhfhbkhbbghjdikggakfjhjbebikagcgieeebchhbdihfgckdakikabaacafkkkahjjhkhegbgdgiaeehbhkefkfehiiceibhakajkfbbkabcckghddkbjjhafaahfdccdidegbajhfecijeaagfjieahbkbghdjaegfcjgacghbeggbjgdgbkjaahddcckcekffcbckbjafhbafgjaeigbkfbgifijdckkighfjkfdfiebiaaebabgcfiebjhjjecjddkijddbgeihjbfffjkhcedhdikhidcicdkebcehjehjaegjfbfiaabcdkkjkdijdceadkjggajjcjdcibhhfkhkkhaggdfjdfbdcagfcebafbbjekbdjhhjkcakjdjgahjeifhjkefcdkhgbikdgiiijhbdcfgaajhdfkcchejcgbfchbjbcffidaikacedegjhgeaebcjkhddidhcgdebhibcgbibaecagjjdkkgicaigdkeekeijgjkbbkjfhbkigafaaebdfehfhcjkdciijakefiggkhjcbjggchgaedjakbkjdhjikbchbdjdfekccgkgfhgdfikehakdkckedgkhacedgadhacecbjcfcfbkkdabhddckccgcddfkjffffhbiibjiihhdffgiajjbfcbdcjfikcadahkkfaaddidkikbhehadaebecigghkheeaehaieeehifheedahekkacihaiggjbjgkjbicijaaghcagiigdihfbhkcdchjdcbakkfbbahhdjdkjeibieieechjcfedjekigdibehfeefkechidffbckbacdhkgdkfkiechhejfieifeahcaaafbhgafbciihkcabebjjihhicfehbbffdfaiefahkeccadfibiakbjkfheaicdfaeckbbaikkajabajeikkcaejhajackbiicfejeccddbkchiadfecighfdefkbfajkghggjdciifbicjkkejdiacghachaagfjdfcgehjdcgicdeghjhbjbgjbcgbdaeekebfffijdecahbicafffaacjhkfchihidcbjbkhhgfakbaajkbddbgdhgkcfbfeeibdegicifjedbhbhbgcjihbiacjkgefkhjiaebbjjjhffkieekakkdhkhbdeibeejjgcbakfjehdbdejhkeajigaddjccjbjigdkabjhcdchcadgbajagedcggahbcgibaeidjhkfgcbjchgfeafhihdbdfbajhibihjcjikjegdgfiggbbbjkaedchdfbdekfcfdjfeadiedbddggkijjhgeikdigdejekgdkhdgjcabkekabaihddiideaajjiieigidjgfjdigkgdiahjidcebhhfekcgdafjkcbabdfhijdegfjcfbaceaedjkddhfcjabhbjgekafcdjjjjgejffjhcjghkeaddkbecfidfagkdjfbeeekdgijdhadbdbjhdbhhajagdkgjbbdjeddhbicehafekkahicajjffbfcbiegcgechgdgccecdchgeddechifjjaaejcijbdhdabijejgckchefebbjfaiedjfebeajhhjigkhhhicbfhaefbcfbikffiiihdkifhaabicdggkfbhakjkeifhgddafgdckjgbffeegdhafafajjfkkdjchkfdjjkccabfkcgakbccejghfckdkkjegkccifjbdebhejfgebdkihajbfifhfacdiakfebdkjjajkkhcckffbhdkjjbeeceecfcjjcfkikdbhdgcedhgfhadbceachhggeehdecgjhfeihdfkgjeckebbbdhgkheigddjkckfkkciajdbkbdckiejdccfeddhkbkdkhdcbhcaieaeefjbgjakbkjbkceiiiigkbidfkifhfcjabbdadbjdhebdgefhbghcfhkkjeichhhkhgffiaddbecgjbajiebcihhajhkdhhdgkgkdjkgkjfjckfcjaekcfcgjcbgfeahhbdekaiekbhdeikkcidibjgkaedcbkeibakfjhafefkabjkejbfieaijefkghajkdciaaiidbegbecddafjfbjahidjikaikgibjdjbifahifhhbffkcebcdkdcgfcfkhgcfkgkbcdcajhdjgdhjhjkajbgbadjjdhkjddjjebjkbhaebieihbkdgfhffekihidjgaefhgehhhfeffajjakbgfeadfiikhbbciefafjffejbcbjkeigedaekicedjjbhaajcjeddckccjkejhfekbadejdakekfbedjgbbkbddkffhakbcbjghjijdiiabjkaigjffdjgjiffjgdadfgkbibeibdgakejiaibadegfhgdfefehihicgchccdkidiajeifehcicgjacecbchfjiffcdakikifeigbckjcgagcbfegdkhejfdjcjjgaggfjffdjiahkcdfhcddgjifehdacgbaahghhkhchadacihgegdbdhjhgehaaccaegecajehkegcgjjifcbfacficdifcckakafijgddjghgegkhfiikdbeihkbkicgjchejdgkhjgfhgakgfdaiehdhkggecabgdedaidcdbkcefijbajicfjjjadhcifdhgkdkcaiicaiccaidabghkfiggddefffbgekiighjeadjjfcgkfbaafkaggejcdkecabgcfikddfdeghahacfhfegcdjgbhbhckafeeicgjgcabicdafjfbgijfckcbkfadceejbhhgfkkcahhbkikeejcaeiifcejhgjhdihkhjbbikcagabcjfgaajhfgeefhfgfdahgdbajjjfhakckegfdejjfhgdcjjiibbfijkfeckahebagbgjeaeebehdbaafcaeiacbdegijgkeejicgffabekbidaafjiahfaghfjfdgeihhiaibdhdjdaaiaeagjfdgiejhkjfakgddcfbafbjcbefdighafadfcajkccgbkbciejjagfdddcdaedgkedfgcabhgedafbajagkchcfahbgfhejgcdcgfffcggfaigihjdkeibiicegaidbhdhbikbdchfiaihcehgdkggdfgjckfddfdhfjffiebhgkkijkichbaebiddbhhcgjjgaaeakjfeekcjhabbgbfehkjkcahbkjcgfcdfcafjhibgikeibjhdidadhcfkfiaaeeddhfgaadggdhgkjbccbfehfidbjdibijaiigihcbjfcafdhgkbckfejhbhfacgakigiahbddbhbecieddbegcjeihgkkadfccfbfgfbhecieaakjddfacdbgdbecikihhcbkfdjikcfeeakjckhjfejcfkkifibdkakegkhgfhbjgekhfedgjicfcjhecedbjegcgifbkddhfkkdgiakcjekffbfbkacefbjegjdkbccigafkehceeghgedaeiifiebcjkhhieaefgefkgdccicdaccfkfhebjgcaejhecffjjjhaakiidiabgicchfebhjekbbhbgbekahgbgehabbhbafhadeajfkjgiifbggdbhbkjjaiibhkgbhaaahaffibbcbhcgcebigkdeacikikbaaedhhkagifjaifjbdaakejkecbagaaehjjhfcgakjfchcjijbibacdffhbhhdffcabdbkkadgeafcjddcjiihbddhihhdbifjjkkibbbekeajjckgghkhjdceaaccafkkagjegkgbhhjadchbcbcahebbkcdkfceeefgbiagihgadjggddgadfcafjikhcbkfjcceekdfbcceehdecadjaffiegfheiffjcegiicdkaefabbfbffgbcghbbafcdehaghgfcbgidbfigcdjjkdcjfbbkdidbjdiaeifdkdacfajkhgikeeabficghfejkiggkhekggabcaehghebfkekadbbffadbdikabbkgbddggieghcfekaaahhbccahdkehagiaaieefiagcfdeabhfjfdhdhaakahhhdbfhckbfgecbefgkcgjcekbidhebckfdicagaekcjfchdgagiihfjckiaekaegeccaicbfchdeffffekhikiieeekgffajaikbegcceacjkbbffejaccfgjcjdjdbicijfigffiafiheiehiekacibhhcaaakfkehaahhjjgffjgfeibkdegjgkghhjeciccebibaijkefeekaikahidkjigkajhafdbhgdgieghefbdkedecdjaediieikbaaghdajhdjbgibfdaieikhhidaikhjaccjkicidihakiajakbkhbfdkgcabdccadfbajabijhcefgakkidiejdgkgkieidcfdcabigbkkaahhkchbgbbfgfahjbddhgchedaegjfkdhbjcejfcjdgkjkcchaebihkchckefjihdgadbekkkjggafkafeaiaigbihffeakdfhcabfkddhcekbfghdfhjkjjhadccdhcfekjjjbecabddhegaahiadfafaikbbbfhjdkfgcdjdhbhebehdefbbebhfdjjciekcfkchhceibaibhkbjegccaahaccdfibkhakafkcbhkeiaiaadadhhcjghgcabgibackdcidaihejakafhhgbiiiggjihhcfbihcgcjfkchkbjbciedcfdjbidddibkcgihigadjkfgjhahjkcebakhbbjkabkcffjjhjhdhekdfkhgdiakfddjikbhghjegedcbibjicbbibcjdcihgagjhjebdjjaibaiiigieakgeiijikfdkggjadfkbjiceidffeiifbfhfdaigckjhbfdecjeakbbajeefddhiafkhfhkchekkgdegggajciikfgceccfhibfdieijidffbgejbaikkggjkjhcfegbjddckddajbbdegafcgeifdhjaecdkjbahhfkbhdgcggkagbjffdgiighijfcakjkaijdjkabicfbkeehgejhaabcfajfijkjjeckjiahkcdekfkjadkdjhbkcekfidkkdfihbccakeckbiedkcdiccifgifjbfaaijdjgekfekahkheahacccjkkfcidedacadedhhbgjgdkdbifcbjdhhjjcfbbbfhfgdkibfgkbgjibkgbdfhkbdjeihkkeedbfjfbahgcehiiaegdgicgdhedcecggijgehgecbebdgajghacjhdedcdkjkkbecbbecifbhcadcijkbgackckbifbhcagaibaagddecfdgekdccdcfikiccagckfdfgfgijbeaahcjabecddfbdcbdcfkdihjcdahadkekjddbaehheeafhhachfghjaakcfidaifkffbadjbjgihciifgjdjekieejjkhfgifkddfdaefkfkbeeeeiaebahcekahkaidihegajdjffgfekadeafaikkgebdhdigjdekcbfbaggchjcejiigccgghjaidbkeckfggjhdejfekakajgkfhddjhcacddkjbafhjbegebkjkbdieifghkhjeaaeacdcghbjcffgfacaebkajhkgdabefigaeckkbibfihaebdhehcdiiabgibkddkcahfbgiebkjhjcfejficfibhfcjdeihcccdihbhejhgkhjbjgidhhekbgacbgkebaahcfdbikhgjgekihaadcbchfdcaakigfhejdhkdbiefjfacekeadefkgcgfifghbgkgfdgicikeadihfkidcicbdjeedibcekjfjiacieaekhbchhikbeekkjackgkbkkabkijeedgafjefeahebbajcbgfcdbaaeahfbaifhfbdfcdekddfjcfbfcdabccfkeijcidgabgaibfjjedgfiihgacidaihkbfdfijibakgfijghhcedegjggahfibjhdfiddejdiehihhjhjjieghfefkhfbjfbhjabhkcagfaaaihcjjigcekhhjfcdbgdgbkaaeiebjagjfgkkgegcegijbkeafbjfbjfhhebecgfbejjcdfgbaaadaccdkbghbeikfakgekdeghbbgafhjiakdgjfcifgkibjdgeaieekiccfhaajdehhdgiedkgdcichfidekfkiceefcgebcbkifbiaigkkjahikjhgaiejckigcajbgcakhdhdehcacdfeigbbcicgekchigkibfkbdidakgebdhacaijbhfbcfcgdfdihgjjjbigjiehabbjkgjijcdkjbedgecigaegjikiacgfjfccgkdchejaabkgfebedcbhkbejhdcabcadhgcgkhcjdjcaiigfakefbddadcghhffbdeabaikddheedbbhkjgeijdaeebdfbceeifaafgachghadcihjcibgebjgbdifjjfbceagchcadbahjjdgjgdbabccdfaecjgfidffgfdcgedeejdiggjkidcbdgkihdhfefdbdeibkjgafadkdagbeicckjfeegbjhekbbejdhjibeifggeacchkdgedkdabifiehagehfkeabjckabajhjfbdkehbikjkabacejcfjafhbhjehjhekhkkefgiehkibkcikfifgikgedefcfdegaebchgdhhgdkgdjikbkbickedkcadhjfiaekibeibhjehjfhjiijkhdgcdghceeghcckffhdgijikgbbejfjkadkiggjackajfhbbabgjcbkdfjfbhgfhjdifabbkabgiiacdigjbjhggigecjecchehefciahaiiaekacjhjjjkdkjbeaakhihjfeijagakickcbigjkdkefcjefhfkjbkfbihdcbeafhkigijccddjiaciijbbhkfekeebekefbdjgcejigjigedijfkadaajgkkiaghheegfgdgkkkggibiaejijfehhgaijijddigdahhfffkbhiiiikcchdhechdfdjdbiihcfffahibjkiedejjccfcbedkdkcdjcicjckgifgfbgbbaahjgcfbchfjkjjjagjeaefcagjkaahcebdgjaejkgkekkccbfibkgahkjjgedkahhaghfegkbgjefgdbddhadgehgcbbbhkhfjgbdidcejeajkhkggfbahacdiffideidbhdkaieddjbbahjejaakgdcgcefhhggjgjhedbeccicaccbegfacgfekifheidjbgfbdcihibjgcjgifgfhaiichdaahbgjkfdackhhbageejgiifjcbaigaahaekhgjijijiajejdbciddbcfjiefcgeiaikajfbebjdigehfiiiagejkeihijbkkdeeihhjdddkjcidafcgdbdbaebfadgbebkaedhghkfjhgdfkgkahaiaicihkgabiefjifckfgkecfjcfhkkecidjfbfdeidceccdccejbakbdjkfdegjihibcjbbegkhjaigbbkbjfgjkkhfcgekddhdekbafjcekdgeebfibhjjckkjdadjdbakhdheggfihaceccekgjffhjijjdhgdkgdafhafhkkgebcgfekbjgfdigdbcihcbbieeaibgffbjbaikfbkjaaahddjggiegdbajggbcbjagffckddcdkaedkcdagdhdeaibheghhhdbhbafcafffffikidaggfkhchjbakdjgdjakeibfkfcdjdbaeifagehcefjbcjfjjcfebjhkbaccfahhdcgfgcahkkbdkgchcfkhkdikfecakcjecfiheefkigbieikjbfikhcchkfehdekaabjcgeekgacceaicjkgihjdjhbfjbhfkehkhkgdhdfhghfjckkdkegkjajjakjbedecjgahhcechijkfffbddgecbbfekbhdfcibjdehcaccgfiffiaeiedcdhajajeachdgigjbkbcidbekifecedifjdachhgcibijcifigehegjihbdfhcijgjjdbgbebfchgefacfkacdcdjbcfdgaeikfgjfdehiaajibjeijiffkkihfhfiacfifigjfjiieddfgaedchgcjfihbghdfeikjefgidakjbgbedkikabejkkgkebjkgcbeigjaccgedhkbeijieghkghkbihdakgbbkdkhcjkcjdkcikdhgiffeikbhhbgiaaigihdhgbcickbbjjhhfibfjjhjieiekhhfeaedaaghbfahfabjdfjagbckdkbfjafihbecfekaffgggbdkfihhkecgjhbbgjhaeeihhccjkjicigjidecjgeahkgffggbcdhcikkadaakicgehcddghgekkikbhbaegjbchiabjegcjgbkbafbdbghjcghfhabfkdejahjbkeajceacgjdhfgfcfbkffcgikkhdchjgfffcffideacgeafiikbfdkkfbfaacckcabehfhihdckaachchfigjejhfhggbechhhfkckhkgfjhbjdjffbbijijighdkjccebafchkibcdjjekhbffajbkecajhjcgichaehghackbejifbbjedfkfbedbbjfiifefgcgegjcfeecajciiajafigidigadjikjedeidkcgakikdbjjgidccaghfahdjhegjbeceegakfcakekgeijbajhjcgbgddcifhdfkegafaacicjajkkidbcgafdfjagjeakdjabgcjcbcaidaedkhbeijceeckcgjhbfehifhigdkakjgdjihkhieaedbedkhbehgbedhfjjgihhbdfdgbfkgkiikdjfhgcgebibcbdffjekfebgcgjggggbhgffifehkcjcbiicdijigkcjkegfiefcchdfbjaedicdfdfjibkbfiekhacgkehkhgjichfchicfbkaidekhbehabdceihfiekfhckibefdhkabgbefbaccjcgfjiicfdcihdfjfehkdijjbgdgjiaccgcibccghkadaagfjgfckjjfihaegagdhbbajddcfkjgckeffgcbbiefddachfcekjjkacbcaijkhdakfhffjikaeaahfibfabidakjiiaceccdkhigeckcgaiijjkcgjccfabhfbcifgbfkfdkkbdaeidbeebgcbekhbgbbieciecdhjfeheehbegfegeiciihgebehbaiagecdecdkebffgifhaihaijieejdjdkdhgejjjihjhkdjcekfhbgibhkbdeddjacecdffjafcahbiefjedkbhdakbkbagacajhfihkfikebjdcfhdcchcbgkfcaifabaakccjgikeidigiabcfbciahjcacjkakgfjbefhghcdbfcjbdbjehcdbcibkhaeikfkekdddfghidjkfggdjhjfbegebiahjkdkcabbaibjabidcdcdbhfgbkhakeajghcachadjeihdieehahiddejkdcadbheefhkhbfffikkgfjfcjbkabhcedaghidijekhbhdegkfbedhiahjiigjiffeckgjkhdfjfhbiahkiecakkkhcjbihjgjdeacfeehkbiccikifkgajhikcifgiajghhhkfgeagfbihhihjebigkbbjijihdbgbkcdebkiihhjfbijejaedgedcaffaejikejcdifebbecidchbjgkhakbicggbaahjchgbkffkbbfebabbkjcgakbgegbeecgkcjieecdgdcabjgegehcchjhifgkbgefkfeeiajeihcahaajdkbidigciahbkgcefagegajeefcabjiehjdbchkfcdefgkachbjdehijjfjgffjkabccagcifahdjefdefcdaehddfcihiicggjhcffbijkfeabcifkabbekgdgedjhhfahabdakhbfagifhcfakkedabceikdfbikfafgjbfdcbjkfccehicbijfaehchjjhgijicghbjbbhjhcdacjakhfbgaakbkgaeidkaakidfjgiakkfkdccajfcecghgkbaiedehcgeahahifidkkgdgiecjhgcbhfdckibecjjcckbfakbigjafjhehjabbieeffkfjdckgggahakhkcabjgjajcgdedejjcggejbdkkffhaihhkkcddbgjdhacddjkiifhkddkhbiadkeakdkbcbfbheagikbkhdbgaagjbcefiahhkdicgjhjhgacihhcigbfefbdibjhbdjfegicjfcbchiedfakdfhbcafiieiifcgidbidhebfekddiigdjffeegkfbgigjjkkfgbchkgikhfjhgiedcdkaifbacdcaiafhjdjdhefkeidjjbajhjkfehgeicdecicifgckiedgddgfcakdcjhbeakbbeghdikgkbgkfjjcggahdgkjhhckfkikfbdiedbdjfjdkchbefdifffegdcefibebkajjkfgjickfcjdjegfaecdgajffbkhfidaecfcikgkjigchcjecdbgagjcjbjahgkgheaaggjaggedcifbjbcjahegjajjekdjgajffjdkhcebfbecfejghihicffcffackejeagihihjeaecffecbcjfcidhhbeejkjijbcfdkjdicdckhabcjefgbbbgadagfbdfckkceehhccgcieifkieccfjgagakekifhbbdccgbkbakdkefdaikkgjbbbcdeeaihkbiegdedjcgifjeiiejfakdifhdkgbdjhikchffbdakkdfakhfhdadeiedidgiehacjidkidgdabkbchcaichedfijckdkhibhbdabkbkcggikcggggeebefkhjhibjkdhghgfbgekjfhjahkjfhgkccakcdichkkejehgghdkkijakefeeidbajaagjidihdehjejfbbkjegedjjfajdajekcggkijfcjhbagcccgdfeecfdkgkgkjkbgbikidekjkgfaaeeegkkkbgdeckgdbhdkkifgifckdegahidabagkdcgjkakakjhdkehkcjcjifchhieehkdebdfjkhbcibjicbdfdcdfgfcehaijkichkfbggabeccdjfbjjccfiehbggkgfkahifekiiffgfabjgjghkbjddiegbbkccbejkbfgggjccdhefkgjcbhbbkggkhhcadekibcikhbjjcibigcfiafijgadiahkhhjjgggicbdckjbkdckgeibbfbcfakiaafaghfhcchfekjgbiegkfjjgfffjdcfgkagcabikikghffbibkcaijjjkiejgeebaickkibgjghbcekgbkaajhbbhgcgcikgaejbcfbfcfgefaddjficgkbjhidkkidgikgghcibhhcaihkicbkefaibikjdfchbjdfdeeghiecakgfhhdfifaghbejhdgidafciikhfakhfibadkbgfkakkbgheeajafhihihahhiajidgaeggiheiicdfkifjhekihcgjhbbehbbbkfejgegbdcgebkhcgihbiaehiecgdhkbjkfgkfdggaddkicejkicigbckebekiieaidaafhcdgheeieajjbbfcdifjhaehhkkeekcgbijhhhhkcgdekckeheaahbchhfiidfajegdefgfehhjgaijbfkkffigjjhaihchafbgbjabekgkejjkfackfehhabbagbgckchafagjedhabacfibhegfajbiaefakebjifahbejdfgfeejbggbfdeeaiikbkihjcieciigcedecbcjhdbahjjjbhecedgbggjihgaehjcghbkhajaihfbjjfibjkbiagdhbgekdjjieeffcfdjkbdjdhidhdkifbhckgkadeeciehiiagifahdhdabhcejfhfhbfbgcfbhakagibhhdkbghgiebjfbfccggfbifgchgehbdieafebkfaakfbgacidkddifadidaggbgedkgfgghccgdkbgdfehhadbigibegfkahejcdfdhdjkjcjhjkigiifcgfhcbbhacbahkcgbfgajdickbceackkieeciidgjbhdahcbfhhjgkafaacekfbcjahhkabfegccceckagjggjahekhbebfbeckdfedbcckdjaafajggbigjdgfjjhcghkffcdhgecegjkihdkghcfhkijfkgafgibfjckecabiddhjdajffhgdjbdjgbjkdkaejdcjbcfkekdkgageekdijcbahbdhedegeiiehhjgkcjfhbfjdjidbkfdcaafkabadaacaeecaehejghddfcajigacchccgidjbjhedabbfcefjidebkcgehebdfkhjdjeedbibkbihahdakihgcffiiddkhiihaejgkgjhjdfekkkehahckcckjkbkikfhkdgkghaafkhgbfhdjhhabcaghbgegfchcefcaagijfdjjfgjaaheibjahbcehkhkjfjegcdcefkbdbckjggfdeiakkkceiejibigackcafecbfejecifijdbedbgihhdghdabcbhgicabjbbjdiikeihikbjcbaecbgdaaikggchceieafijejakhcdffhiahhejjjfiehjkejfckghkdbkkbkjkhbicikkigkkfbiigjbjibggcdejhgejhibhfgkaahakcckgejabidedfbackgcgfdahfebkkhfbahdkaffgcaahckkajjggbecfigajeckbkkekebjijeihgffkjihbdifbfdkfjffijegfgjhjedhhchdcfibcciegkachbgeeedkehkijfccjabjgcccjccijcabidchbbiccadcecfgfjbfijidffkhkdiabajacaiahieiiefkaffgeekeeiijgejbejegdcieahbacachcccfjigkdegiafchdjgdcbkkfjbggggabhjiiahdbeeckacejgbedchbjeghgfafjbkdihkjhkjeebkhebebkickhhgkcjajdcgjckbdabhjgecfijjgjdfhbfkjfbikdjciejgefghdjekejjghhkfbgifgghcjidbhiibjgdhddkkekffajcfcacegfdhcjaiaeajcckhhiebbceakcejjjdjfcacgbkcbikifkghkgfbhbkdcjdakadfebfijhdabbjidikcakfiejdfickhfkcikcegdhccikjaiiehkabjejaffchkajjdhcikegkjjjaccdjkkibiifdcgcgbafebddddkhjcceigjgebjckbhfifehifikdjjkhacjbhbckihdeabjahbbcgfdfjhbkkgkagkjjdckafcfcigghahedjffkahkebikbdkehkhjeffdfaffddijhbchhabkaacadehdjhgefiafbfjkbeedeijfefciefhfegijjddikfbdiekfdfggccieebijfiiehbfieckakchkghdgfbcbiiheidfcjjjccfgaicbebfahifiggecfibhjgeibekhhcdgdcebicidjedhffkjfjhiikefgfcaifkkadbcfccdkgegdbiieikcjgjkkhfdgjghjbdgidiafgkkabiajcjkekjciajdiiciikhahgjacgjeiekhfiheekhefjhikjgkeebgeckbdkhgkfgdbecgajgaakheagbbahggjhegkihfgcfggffkebbfdgggbhbjbakdekaibfceffkikaaddfhdhdfhdbaaedeaikgfgdhghajijabccdbhabhbgjkhahfhccjjcjbcacbgiabigjgkcjcdceiibghdebjacicifdegkgegbgebbjbdbcdfjeigdceihajeadbdeeghghkbhabdeiceacjjhgabfhbgafjgaecekgfehfeabifjeakjddcgggcaajkffcfjiehjeddkjcgkbbkfhccgfahefkdgjbaebghkbgdekagijkchfkcjffiaiaekcchibidgegkgdcefifbgghebikaahjfebhhijgjfddcjfbkjjkgagfffbdkiaejbkhhckgifjkdhdebabecbcgfbejehjdaebefggcjagiibjgaehigaaicaghdfghghiaiffjfjcgfffjjheagjdjbgfahgejkdjkgiikhhedcaddgdfgkhfbkkahdiebfbhcdeacfidfieicbigkjbgdfbhcgjgahgddjifkfgbkgjaikjkbgegicjceaadjgfjfejjhfcigbieaefeacieikkffbjcfkfkikjiacaihhehibbeaedbhabgddikedejddchjhceahiikfifiaicjiahjeiafahgkcjabbhaeahjgkaacbccfjedcicbfdhdifddkjjbihgafecadekdeegibbejadaaddbjheibiadheaceciijgibcegjfbkjhghchehidjhjjibeicdajidcjfchieeaifgggdbehggkigcfghbbgfgfefaekbdgdfgkdjfbjbehgjgfkfgadjifhgicffbbejhgbfkchbfdffdhkijegkaihaaebggefkbekjhcjcaefcbdfcdgfbggcekefeeekcecfgkddceeefhahfkkjeeebbieiaejcffgkkdkbjaaafeikabckbhcadfacffeigkaegeicjbeehhhedcakiiiefibbhbbkbeahcfkjhdcbkbdkdeadjcdbfifgkgkfeeiajfkkadjajjifidcefaajfgddhcffhkdjjkcgkcajaihfgegdaiagchdcfecchceehjkgehekfebkebafbdchjgfbedbdafhdjiiijccjbhjaaaddaijdjcffjheafbagbgigkafcefjhajedbbakackjcddjibgdijfbafkcijigkcjdagededcjfabhkdhajeehgaikakfgfjkdbbcdfcgcgbhijkkccgcfikfakdjbjfdidkebeckakcjbhkefakejcabhcdjjabeeeecdkckfejdhdcideiiegbhgkabfkdagekicddigigbeekidajbkebagkehaeajikkkecajckgcekbdidheghifkejgjhbefajajdkhjiakgeeaabdfkdgkcagbjkchafkjgkiejhaeghfaghkaafgbiffedbajdigcijkbjcdefbehdbffhfbajahdjbafdicikecabjkhfdjaekdgdjgbjkiefeacjfekjcdgfccbhkkjggeakhbbgbhkhcbfikgihdkbfjjekjiiffiggfdjciecacbcicdfjheeggibcckgkkgajdeabijhgahkaeefigichbdcajejcaekhjgakiajahkdieaeffjkbfjeehakaekdgibabkjefcgiibdhjhaafdiakhhiagakaedehfefccfhbiacbffeiecjkgbejggfakcbhegkjhbcbkbeakkfafabkhagdacgeciegfhegfdieeiiijhjjbcdcbdhjifiejfajckadgjeejeihajdidheegakkahejgdffahjkidadedcbgajjehbhidkbcbihjaidkkkifjgceghhhgkbdcejkheecacejackgjgdkaiijjiagkbfbgckiadafbdcbhkhidiikjfbdeikjhgjcggjjfjfkjjbkcfdfbijgggkijijccacecfbaadfafgaahdbbicedigbfhdkcagcefgccbciejehgjfdcafadakbaegfahkggjhagifgigdfagjghiiccahjbgebjbdjeegfhidegbgkdcckecdakbfigjgbkaejegkjijdfdajggkekdfgikkiceebebgjedfdgjabbfbghebdbjcfhiieijhhjagcdfiiehegdegkagdgfjehikgajghahgjcfbfbbifaefajkgfkbghaejjebdhiehkahageheefiddceabaebhgkcejjjgceibiadcdiijifikfhfhhjkgejhhhedicefijhigjkabjcafbjifkcjiaffccjdakbjfikkjebedjajdfeejcffkfbjjhckchbdgkaefacieggkhkkghihchkkkkfabihgeafhbafbaadbkbfgbidgeabffffjjddechfdhbibhbdfaigaiggidgegafidicgecgeadcifdfcbdehfgjhabagccfcedkkgcighiciedjeabffbkccbkidhahaffcgdbhhbfakhacahakcdhkcieeficcjickehabdjhfkabdjighfbckbedeigaaibacahiibhbeaibjbjddcihjadjhijjheachcfjgcjkjfkbgfdjdbfgffackjjjdjccjgkckkafkdakijhkhikkdabfdciakejchhkbfdbjdbakahfgkdkihefiijahjidckgjkdkkggedkdicckbgigbghkbggakakkkgfhifjbcbccdegkhcfbjikafiiabhcgaehefbaddhafaibgdbiigchkckfbbdafcfhfgbchehjgbhckaiegiadbbjajbjdbdehehghgcdkjbiikjckhhekjhdjekhbefckjhegdiihghajfiahdkejkbaecabcfeicjkibfhcfibdjcfidbjeehhfdfhkbkhfgcdbfgbajjgcjgbdhihbdeaiajghgidgbahcbajgkbkbbfcakddkjgkdjgeiicibdhkdgcbkgcfkgkkiabjfjekbibicbiijgfcaegdgicegikeageiejjjikakfabckgddifhbhjhebeggjhcegfiehheiighefjkebifbhjkbgidficdeaadjhadhgghchcehjigciekcgjdkieeaefifbbkhdgkdkhajiaabdbchihbbjjabeccjkbfcghbffhgibaffeediajgkgcecaigcfcdgafaifhgiibidaacjjfbddiabahdfkiakggehkhijhdcchfhbkihbijiikjjgbfgkaifjcjbgfdefdigihkafaciicffgkbhkghciieeekbjfbhcdfceeadejaibihigjgdeihbgghfddahikihebjjikiieddahgaaddkdiijdcecjdiijadcgkbaaeaadigaedciibkghgcagfcdehbaeccekiccegabiaijihhdckgjkeikdagfgfkafgidkkkkaacgdkibjjdejedckgbcejbjbekfaedkkjbfgdjbihgjkdhgbhkkdjfbjcbedijciicadkgecfibjkefjcgegckkbeabidijkbhgakedgjeekgkeehdkbfdbggddcigikkdbjhijkfbdhghchjfajdjfaggajfaejbefabafeiahecijdejheajdjceckghjebcfbjjgiffeehjicdcbchdcedfgedhcbeecdkghahkigfhjigakkhheigfaigfkdfkedabeahcakahahbjbbcdkcfaeedcjfbcjegchbibaedgkgcchbeckjdbdihfckihechbejkjjibhddgfijiceekaabddkagekfffbgfkbkdfciigdddfhkfehaghahgidjdbfbhefhdjaaehiigbdbjedhbhhckcijgiajkhhghcckcbhkfjjacjbcebgkbhdhajediafejjagekhbiaahikjkgcaejkgjhijebekjbjkaahebiajjjeheedbihjbifckhhbegaihfkdigakegeceajbbdbdhggjeekhfdejhcfjigjegaedkgbhhjfdhgihikkckicacdjbdcfcjdihkjejkgecbecjjbiiiggcffkaebiafjejfbicieaeejkkdehihbfeedkdfickjjahghgffeabadjkcaheabajdcfcdicggcdckcecbijgekbjackcejgckjffjegeicficadacaehcebebccgdbjeedjgcdaaefeediiajkdbbgcfjcehicagkbkajbkbkdgdchjghcgkihcbdhcbkdkkjebdhaiackjhikjgiidahijbkeekgcijkjjgiieecchicafabbebikgfhgcjjdkkajakceeejaibdbddkgegfdkgjcgbhhicjjkjbghgecabkeaikdeeibgdicfdkggcajdgdhfefjffafdgekbkfkkbjefdfhifebaebgjjbgjehjakdjhaaaicccikgebdjaifacbikgdkjieihefhdbgaeiiakihddkjfbfcbeekdjgfebbhchfhcefjagifjdgeeedefggeebfggeeahdeeecgajgbdeebkhhfgeiagfcbgcjeicgekjbedkdgfifdbakjgdghhijcdgahgachajbajgedidkgfkjecbhiaieiedhhhjjgaakkkjfgjfejdhbgacijajhfbddfbhhafaikcjakbhkhicedkccgkceejicacgcciiagkjgdbggghkijcaafecakkefgkfehjdccjdcahcaekcfbhhkbibbdafakgeiehdchcidhihfikkjhhhdkfcaekieacchbddadffcjgaeeifhckdbdddfagekjeafbihbcehjaeceegkeijdcihbckghaggifdghcbfbackgbfcdbkhdfhijidfcieifgbfdbhghhjffkehiaheffiedfcdbcidecfeifeiakecdkaiejigghbedfffibigedjgbjggkhahiiijcjhkjhjhfieadgkcjhagfdgcdjeiebjjkhcccjcedgcghhifhgagefbhdefaihejaaijdbbgkeekaidhdhiijeaacjkidjddagehfejkakgdcakbebdaaeidccgdjcfdjfgadegedjcckidehcjagbgdgbejffgcacjkcgkkbbebefgecijhfkbeffdchbjkkefbdfejjbifkckbgjeaicgdkjcffdjhgkcbdadhkhdjfgecdgiafiheffeaifgdikhcdkchifdbfkhbdcffgcdbgefkiabiiebbijajdigkdfcdafkicekgagedeacbechdedahbbjfhkaaiadihkhbkiebgfkcgifjccdidbhfggaedhajbecbacgkdfgddaadbhgkcgihcafaeedahhijbaagfhjgebecikegeegfiegdcfadigagkdegdcaikfchjehfeegkgigkgjfafhbbkkcjadcfgjahecbgddkdeeeigajahjcjkccfiikaeddiccejjibfiidedgbcefahgegibedckdeahjbdckeiahgebhhjeihbbdhibahifjikjegeeakjggbaaffeejhjihheibajihedbjfeaaiaidgegbbgbkgifdcecjehaegccbibcfgigdcfadkabjfiaidaahaaidhbiecgjacghjgifaeidjbfkibiaeeaehaiiiakdgggiebkcgcbkkajdgdfedfcdbaahjffffhgkiahbigfekbjhjikggifffbjhebkifkdkgcaejcdbgcehbieaejfcgkjgbadhejhiggejadgjhkackcfdeafaacbaajckdbdjcdbihbaifgbdkhaddbegiigeibaeicjaikjkcdeddikciccchchkafebikgffddjgdbcigaafcachdhfhkgidakahgfhkadeecaekhbajdiieadehbkkidifajaagjifbbajkhkcifackjgkeejcedjcgehabegijkaaabidhdajkccdgjddjcfjfbbaaefbheabfiicgcjgiicjbaikaabikfacfjhackfcjhbjehjfjbiggebeffkicgchbbgkhdacgbfeaaikgckaabgghddfkgidgjdcfkfhhgiakikigfhcahdifgbjajfiddcijcadgjeiediekgkffhegbacakbfaacdbabhigdkhddchkcdkdjfceabakjggbhhajbheijeeccgbfhjejchkcgbfbbihbeceahjekcgfbjfhbbgjhhijgdijgebkggjhckbbedkafkbahkiegbjddaejhcdiegfcbfijkgdijbjjbehjgdkhfcfchbbkdakdgdgjjkhdcdcafadehccghgdkiebhcghjadcjgfcdaaifdafaaeicidkfhbhgecakkgjeajckahgedfgdbgakhaiccjjgdcfdkjfkhghhckchaeebddbhajhbjgdfaajhdhddkjdjkjdhjfifijihjgabfjicccgicfibjdkjhacfkbcibebadddcdbagkdfeegdkkfjbcjacbcijfdbkicbcbdicdgjjecjdcdjedekckhdgfjhafdikjcafgjkabecahbfficiacgihkhdbeekjhbkdhigbhbiidcdkggahgihffbekbhkkfchjdifdjaicicjaacbkgehbkafbeiejhikgfjjdgggekedhffggehdbcbbbjdicckdcgfijjkaedifgajhibekbhhcfigeekfchjccecdigadkjgchgceachfkhfjefjaaggcaajfbfdcbdhikifjcghjjhafdedaahdbkakgkgcjcjhkjhajhiebkjjibaafbfbcaaideaabaejbjfcafieaficchkddkcfaigbhdjbijdabhfedaiggdchgbkebgjibbajikidjghebdebfegiejaddiagcebcegcafajjjhidbgafacejhkbkgciggcdjfejbbibhebhddjbafkbhkgicakafgefcjabgkfabigkghbjeijecgdhhdghiahifhbhkdeaejbhkffijbebhkkckkfkdfhjbfaidgeehegjfdibhbiiekffjccdhhgggdkjhahkibgbijifffkdgfbhkhcakgkckcggkfihikaighecacakjfhiidhedkggkbgiiddcffbkkffehfhgidfhgeadijgeaeijeaiibibhacfbaijgefgggakagfhcgbkkbddhjabkkhgieekiddehgkjjfhjkkfdhjfdiicfddcbbfajjbbcaekcchjaefibbikkkcegiichijjhbeibgidcfbbgaeeeikghgicjibkkgfghiecfacacikgcfgjgdjggefjfddhdikfcjhddheibfgjchjfbhcegjhfefeigjjkiifeedideedekjcfgffgbhkjhkegdgfahiajffgkeejicbfdcjaacbfeegjgekkkgfheigdgcciadijifjfhadabekbcijijbdbjhgihaabggdjjebeciciigjaiafegegbijighefejjaeajjjjgdjhkakcfcbdcgaeaaeajgicfaifaadjhdibkccfbidbigajbefdafjbifihhibagffhhidfjahjddfcdfjchebkgfcfdbdehaedhccddfjgffbbcbfdgcecahghdhikgaahhdeebkbkfecbceeheekecfifichbkgeagdbbijjcfbfiafedhggchcfjekefbhjbhdjhbkhcjacgaffbfjgchdgkcfckcbbbiehaheigcgiigdkedhacbejcdidhaajikbjkfijikfjhajchbkckaighhcfkffhfgaiejaicfdcihfdcfigijibebkfjabakibffchachbcechfjfadahhjjabebigjbhhefkgfgddhiedjijakckcbdgedfiikebkgabkggabggkehcckbbfdieihgkacbhgkhhadgajfiaffecaaijbdiekkkjdabbjidgkihdkfefcjiaddkiakkkihjjkkjadfecekejihbhhkefhkahcjfkaeegkjcekedaffakcbgijcchiifechjdjeacggdejedagjhieaejffdkegchciaajiffeicbciigciciabheihackfhfgkdaekdahhfajkgkjebhaiddheejkgbbkafedjicdhbkkcfkcgifichjfcefbbjkegaheagdjdickidbcidebhebidehbfbdjhfkkbacabdifbhddbhgcbkbdfibfgjabaaebaggghejdjbgaadjcjcbcfjheifgkgaajcihjfheieffbhghdechhibfjagbbcceeigdchkfgaideiackgbbfbhhgadjjdgeejagiechbeijcgbehgiiihdihjchghedfeaajkegegbjajefhceidgjecbifebjkdbegcffcdgbjjaihhcgajiabbegkagjbigeeiaficdbgfgfgkfhabdcgekjkjdcedkeadkbchcdkgcgjjeaehiahjhhadhfkeajckcaegfijbgkbbijfhahcgfbfbijjfkjaiafhkiidiaebdchabbhkfiffgjigbchaihbjdhkkkedckeikckahhdhggekeijhcaaafcfgeeajjbhdhifcecjgjefjcidddahbkdhhfggbkaiidgfahcaegjbchjdegiifddciebkhdaffdikcdacccidfakheikbkfcichgcaggbgghagabjechjkdafcbhfbjfkiadbfihccibcedghhkegbhjkdddfihajacaickadcjfcdghieajcjjhhakikaakbjaijeaibgbbiddhghejgiabfdihehjddhfhgibkchfjcfgcbfhidfabcjkihacjckiafdicejgkakfhegajkekhiheaefagijghhffhedgkddejhhhheejkfcfahaefahjiefihkakaeajkegbihackdbhdhieggkceefcagjhagidfkcifhjekjdcfhkedgaaijddjaaechcdhideahddefiekighgikbgbdckhfeikghcggekgkkbhcbfackdgeiiidekhfifjgkehkhekhfhhbccidjiadegeaicagbehicjihdejkdbdhddihhejihcffbhkcfigjhkdkcfbhbdfegagefghejbibcgekhhbabdibakhdajahgfekcabbdbjaeahbfjjfehbihhabihdgkfggbbhfkaedijdjaigbhcecbjacgbehchejcbiggejibejdeaghaijjbfciciagjekebijjhkijeffbakeefdbcceeijbjehikfhdkdfdakdehjfddbfcjdajaicbdbdkfgbbiddijgcjhihjkgfcbigddbidhbccbhbkdfjjbkkhdceckjjehbeiahcgkkbahkckdecffhbdjkaabddadbcfhgkcikafffbbbfgahdecdakjeaeeggdbbbiiiibidhbfhjigbjejajjkefbgfgcbegebfdfggdifhbccfehkbihjdfifccfhhbbdeddjggabhgacchbgfgbeefafkbcahbjjddficccfickaggicdfdddjbhhjjkhibaaifccgfgkkbiffacifigfbbccfdbicegiaigjfbbhaebadfeicfcieeijhkjchgchbebaabcdekchiikfaiccaffhdkjbkfhhekhidahaddkjfcafjebaidhafdbgfeicbcdijjbajbhaegfkkbfcgbakicbhddecejaaehfafjgkfbadjegekffebgahcijbhafkbfiaeaidekkiighkgkhjcdigagcefdfhibacjicfcafbeajdbcbibeahgbkcahgihbbggibfhabdjagkiedekhiaahdjeaffhfbbhdjafeieaahkhieehcdkhfgeiefgkdgcjabkjcjddeajkfbhgihacfbjajeaakjiijgecjajjjfdgikkgifacefjjehegeeeedeafjdcbbikajfjehfaeiabegeaddkcchjbhkbbkiefakbjdhkacejkfjhhdgjckgadjkjadfckijkcffkjjhjcffheeefaecddhjiffijjfjkfaheefdaijbajkeafbeddfgeijgbfkbfbfkkgjffihgchgkaiacfcacefdhgjbjhbdiaidbcihgjeaaiehkiheeagbjbkbddfajjehdhkhcjbkkijaegdaiddajhfcbagejhajfccedjdddkggdfjeiicdjibkkbghihaajecdkkdeaiihdbhgkjjiadjafaegakhhbiiacehggicbhbfidbadacideddjkbekfacgfahjcidbfaafcgdighdibakjjafchgajgficjaiagbfchijhghdifafghaghbffkbccafdejbjgkkjajidkgkehebbkgcgecgegfdecdfgciajfiekhagadicifkgahfgeghbgkegdjekjehbkbhbccdachdbjjechaejfagggaceedjafdbkfghbhhbaghbcfjacfeghhgddiakahffebgcdkiejjacccgdhceegddaahbhgbghebibkdfkkdeefkjfheceadjkjedehehihgdfeagahagkjkjeeghddkjakibfjafjkjbejfjdcjfjcjckfdhkeeeiegbjbkfakfajjdekahadfkigjhahhcidfieajiddjkcckjgcegbkgaggddkahhgeidbadehbdfehfjabahbdceddgibjefcgibgbjcjbfhfffgbigbfgigkihfebjgghcecjbjgdhdhicjajdfhbheejcjjjfbhgbjeidfffakfcabicgfjkhgaeciehebadehjcbgkfeghkbbehjiakkaabahgdkdiiejggbjhbigbbcikahbkdgbkkgijiadchidaibdckdeddiefckakbakhggbhbcdffjcdbhjkehghgfcjdkiakkeaijjbiecjakgaiabedckddakebfbikjdedddhjccdheeibakkeeceeegjbaiicdfajejhjihiikgcjahhicbgchdfbajdkckdifaceaekhfhdcajchiikaihkfejfchkfggkigjjdhhigibciaidjgbekcajbakgijkghkbecihgghgjcddghbgcekbjgfckiiajhhfichgdgjccgjffdafdjbeedahjjiadagjcihhedcccagedifghejbebeecakccdiehkcajgdcccacdgkahebaccdahcddbdjfadahabbedcakgjbbidedeidddhhieikhkkgihjaffdbegedghdbfdgghffieebiekjacgcafghjhfahaeicafjhieebbkkehcihgfcjceagiebhfefffihbkecfibbcehiefbkcbibjdkcfjkjhgaifkhcfjahcdhbchbabhcgjgkbdhjikegaecjchbcgbcdagejjihjhhkebgccbghkahbaikdgaabhhagbcajejceciiafjdbkkkjaiggkiehgccdaiddhjadgkjiiihkhidibjeaiiagihkgaiibiacfakeakkejgddjhgbghigebeakdjbgcfgdhkkbeidgjccacjdhjeebkkcicekafihkikfgcbffbgcfbjdfkfbjfhicedigbhbegbjdbghcjehifbfchdjdjeckhhhkcekjajfcfggahkcbkajgcgagibijcdkkgcegcjbajbdhhcejjcfhbekgjkfaagedjeaechichedgdigcbieajgheijdejakjahibbbfgcbjakihjgcjhchhbcajkibakfhjhhjaehkikhjcaidcefbhggjgfcedkkgjdcjcckjhdfbccgfibcjgjacdiccikijeiikbbhfieckakicbjejkkghhgfkbcjdfgdjcccfbccffccfbhekjefjdeabjecghibjeakchgbkfgffididaagijjachhkefbgicckjcahhaiichffcajdhghfahceedigeibdkhbfaiackcfckikbcbfdcdidhcahfkaiaehgkhhidbkhfhfdjdicabdjbfjkhjidcfbbkbkfjfdcidkcidaedgaadijabaakjjhkckagkhidgjhkegkagbifhihdkiifecfgbjjcjbcbghecikhhafbgkickkccakkgdjkegbgejhcfghbgbgfhkgichjaakdkccfjjgfikhccjgeekckkbdffkkkjgcjiegfcfhefbacejbajddhdkaecbbjkgideggdbjaikcdfjbgbfedhdehjfkfcghhhdhahciifjejaffikiaeidekadbhkddcaaiakhcefehffkgjhhkcgbkahigeahbdhaidgghcecjibbjkdedccgiadahjdgakjgjiiegijecjjkhjkddedbfcfkbcghbbabhgbffagkijjcbedjafgbifkabgkgcafcjachegcjbjkkgchfgekdadhbkehdgaibheciijhfjahcdackaegjbhdeecdikaeadhchchejgihbkbaiekhfjcdjabhehgkkfiedjgcjfhaajkakedebicbcgfekgjfdaaaicbibeghedckggdakgfhdbgjcebdgfdhbgcejhkfiheajjahjhikiikajbagiafhccgehjibjfgkffiiihbfdfajkjickajggjghjjihdkfdbafkfjiiikhjihagefkfiikeiaicidacibdfcdfkbijgedcdjajfhjcghcjbbcbhhikddihjhkgjaciabcahaccdbhjegkicghdhfbdhhcgehihbkgfkbkkgfjfkfgkagjehffgcgkiebddcdcbejhgjjjjbcjfeagjhkbbadihfkjahdekbbjciehckdkkkbckbcccbhcddfgjhhhdccbdibdeaeaiggbjjdcigedkbhccfbeejkicfejfffidceeegejkdehkicbeadeabbagkeaabkggjihbicefejafagceegckkfkfjjfhhafhecfefidijggjakgkhfcgigdekkiiegkffkckijkikedhfdcgeaakkbbbbfcbfffecagcagaaeaaajcfcakdehaijekcdkbegcekhkbagaafbcfkekgjdhbfkikdibcijjbifeefhakdeggahbhjjaahcgdeifdkddjagiiaecbecheghkdbbfgeicgdkgehaffabccfgffgkjikkfaibbeiigcaaahiddfdbddfhkhifbgjebbhfkejbgfaibbjaihicjckaaagdbhbhaggbiigccggdghgdfjigkhdeackbaacagbhifejkdhihjafjkhkbkgigejhakjjciijaekbdkagejahheacafbfegibijjjeajfhfegjcjigkjkgbchjecfdgdaijcaiijfgcchcjgiecahiebggadhkgkffbkgciihbkdjhbcaajkcdcfbfaheegheghjdahkekhhghgkacgaigdgdhgifbdedbheebeiieikkagadcafdcdeadddhdakkdgfgfffhcedefickhafjfajkcdbgaibgjaiicieahkbffdjhekfdkdhdghfeidkffabjcfdehhfcikfgddjgjfhcickacichhahgfdgaiiadcjjffbahfkejcaegcjekfhjdbgckgaakeekigefcchgfddbiiijkajifgfgajeckdkkhbbhhddbcaafeeebajcfeffjcagikkjjhhcgjhigggihcfbccaadegghbcfhicbkhedjadchiiddjfekfeccdihhbebheacikgieafidhegjeefafabedddhagabihbkhhghdfgfadahdjkikcbkbeifhejhaagkfeieggijgfibdciadiggkhbabbbagfdfhaafdbfjbdifikiahbcekiiihiaackiieehbbhkgaddbeikgkdaaebbfcgdgbgijgeheihagcfdfifdaicfjkdfbjcbdggahakgeakadighbdbjbefdceabhbkjffdhjikjakkhhhegceeidjiiibfbdghckeijjggeagjgbicbcfigfifbhdfebdjagfbkddjibjgdjdjibhgkeackfbgafciedcjhibfefdbggdddfhdbedfcgbabfcjdhadcgdhbkkcjechkgdcbddbbbdeceehhbbjhhkibijjadcaecihfkigdccgfdikdegcbdbbdabickdicbcgkkekhgggjajaiifddcjbdaakibgageaicfbbbbgaejccabjeecbkihjgjfaaakigeckadajihhiijcajbeefajhjaicabadaaddfkebgfbdgdgffcibhfkiacfdbcgicihacdcjbfjbhbchikahfahaekibjeddkdifehjkdbkkbccckcfadabekbgbifkckifggdfhkefcjejbgcidfifakkkkafibejaehjfjkhgidkafcajbgdgkifbiehchgkggeffhddebhcigegbcafbiheigiijgkcggbbdkibcjbgikeeifbecjgjabicgeeejjdkbkfgjegjkdbjdifdheacedicafkfdfdcgedcaggiaabfagegafjfhkahkecieihhhijjkdbddjdhfaffjeicdbbhcgfghhdafdhigedgdahfegdgedgegahibgecbhfkgkhbdhjgkikkahiggaeafiaacekgfeahjfidedekjfgfihbigedgcikhciihgfkcgfehgddcigbidfibjkajbjdhihjeghgkfbkdaegkgjijfdkidaahidbecdehhafbdggicjacdhahbfdggkddcjhdhejkefihaegkabgkbhifddhkgggacaaiajgkejhjgdkahkgahdhgkfeeaehfccchacdbchdadegfbbdfbkcihbhebdikijgfaccgiejbehabhhbeagdfcgaihfghdekcigbabkcfjkjcgjkhjkkbchahddgjhgefebccgbabggdgiaaecbbchjbfgaiidkfgikcbibbdcdjhijbkgcjciajedfijcacefacfgaahaebfjcheddjkadcieabjbjgefehfiebfdeddkchhgcehdkceieebddgfihbchhffefidjeefigfjkbdkafeacfchjejfjcfgbeikkahbhiedbjhgkddkdckikehkfeikfadbhbjbffjdgbjdaijfgbhbfgaeddgffadihbbjhcfajbfakdbhegfhgfdkbcaibcfafhkkihbgkccabdeigejeaebjkkghfkhkkdfibjkkjcgfbegafakigaibjjaiehdfhkdieecjcgcgdiaafhckiceicficjbcgffakifeeefbheibfddhiaabbckhfihajhggikgjhjjiaifkfaikddcgekagbbjkjghhkkehdkahceejbicigfcfcfkicfbgifgfchiahcebajkaijakfdcebkecggafdhfcjceebgcecgcfbgieibhaikaifecdgddceciedjibefcfbhkbggikcabicakkcidjgdeafekgaaahebfbcfcdfjkajkfceiebaegbiajgkjgdcdfdfkgacafijaifihcfahkhfbhgegaababkadjifdhebbhdeikfdcaeeafgiddedckadgijhkgecgacgdeeikahjbdkbjakbbdfjjeakhggfgajheaaijgabbakjdkcheekjhkfdjiihggeagjiggaggfegdgadkekfihhkbcahahggfchiajeekajakkikgigkkhccahjbdfeegibaafkbhbggheacagigacgbbjbiahahgfgdjhajeebicjdceghbaeehafaficaejjdcfhbadcefdhiiddeikgebcjhghedehigehikifghgekdjidedfcgkidakiijabdfkagcfgecfjfbikddhehcdajjecijhiafdadbheafcckbkiahgikiedchcikiebfgggfdcedhddbeiiagbiiieickfbejffikcchadgcfabbhchibicjfehieiaedhgbjfgfeefhbfghefhfchhaadicahhhjgejedgdbaefabafkibckhgjaddkdfkbiahgabajahcjbajafgcbgjgcjiicicceddbhdgcddbhbgabkhbcghhabjgjkajaikjfdbbdbcbdekedekdjeejecfagkdfchdkebiahbfbdhgeckdfaebehaidgkhagfibidbkjahcdgffkfkeaieeffhgjkadaihbbafihbaecajfddkigibggdeccigjabcbejaceigkgkbhgecfagkagjcdagegcfdeijjjiabhabeifecdjiafakbgddkdakhhjahejkedfcikfkgjhiegkhkebchdfebhbkchdehgbjjihfhffabgbdgghjghdabeiechfkjkjgcfjgddkdjeidhdgfaahgagfbbdjhghkdikfefhhjkejdidjhkkkgcikfdfihiafdhdbkbcggkchjhbkfbiihcfkbdijfdfjaajcfabjaakccdkhjhdabagkgkadjakcahdhfibcbjikcbgkghgbgfijdkbgajifhikdcfdkeehceccagcgjfckhhjkeedaiibdgkaaccaihjeikkfjfgcaagdkbfieecigidagaggaceggcffhdagbkkgfjfajiccbfcdjakadjfejcadefggjgjgfdejikkbbdkabhghcghccejchikebjkaikfjggaafabfgajgaackkdhfhjdjcegfdgkifjebfkkhakdidkdgjhbjgkgiehfkkdgjdkacbijkcjifdijghjihcbbcjdejeijhbiabgkfciekcjikcdfjbhbiiecdfbkikagagfgieikgckkjihhgkjdahjidbcbgfeaibgikdgjhhihdjejccbckddihkakciagdcjgjjdkdhdbfbhegfccfceageahchfbcghaficgdadgfeckbhkaijkfbceajbjgghgbidfjcddhkdffaiehkbjjjgjgikiaiccejhkgcfejjcfbdbcgkghkeckkfeckehjaggaegaaaikbbbajfgaibkkbjjccfeegjekdbeekfceahffjjigdbgebhgfebbfgijkcbehebidjgbcbcgdffhbejkjaeigagahkcdagkcjihaadagfbjkdiiakkgkjjcijieabcjafjbhjjdkdcdhdgafdafgkadakahbfgddcjdffgbcbeigkghgeckigdcchjkgbkjadkfcbhkhehhadkhdegajcfadejcfbbkcckciebihdbdfbeggheadkhjcaabgagkfkbedcceichabfhhfhbahieggkkkfgkbekacaeeghhakehffgbieefiefgheijdaijkdbfiiiifagdaigikkdcjhbgkbdiikdcihgeejagccidhhecdchiibcihgaffkfjhccbdjibkjgcdkkghkkjehhejcdkjijfgfgkiafaieghfcbfhdddhikdjgbkjgcagfibifddajkfhigeghjcibkaeckfdaibcaechhdkhihcgbcacefdhhdbghjackkdbfcgjeckhfbkhdhfiadbccbdkgeikdcgjgkjegdfddhgjfaddfgceacjfegbiehbdkcicjeeadgfbjjjbgaicihajjfgakjdkkccdfhbfiffhagcjbjjdafkgfbhaaaibbacffafhejiiikkbafbbekkeddjddakfbccjaegebagbeeiiefajdckicedifjffefaccecgigbbibjdckachibgffhdbhbifebdjicbefkaigehdheehbcebkkeiecjaidkkihjgdckeekcjbjhhicfahkjhcceadkhhjddgggggbdkcjdcfagfgcceaacgikabkkcicaaihiidiecedhehhkcghkbgdckhkaafhjebgkghjjekgecaebgikcegeejfakbjibdadabahfgbafjfcajhjfbichhgdafgjgkeakakjegebdkcefkdaagdfdkchhkiifjdibjckdbccaiecciicaeaicgajdfbiabcijjijjhhccbakbfeejfeejdgjhakgbfgijjbggbbajdddikkgdfiajkkcheaagcfefdibiaibajhfagfikgagghbiaakacjeebaccffagkhcdkjakebefabcfkcbjbikihiikkaafejffkcifbeaahghcdchfdddkgjbaaabbkeikcakccaicdeffhkakifbacfhahabhkjfkiekgjkihbahhhhkbbabffdhkgkfadbjkfiihdiacfkdfcedkhgidbhikebfcekhjcbdjebfdhcabfcjikbeeejkekbfahdagkghckikkbcecjcbfeagibcadchbjggdeihfcahjffekcckahdkaggjidgeiiefffdggfiaafbjecifbcjhffkbgijhdaedgjijkdfafjebkiahiaekjfgidbhjbjchccjkcbiikdhdhcfhedbijbgfcajcgchahgaibeeibgcgciidbbkfhdikkaejffikkbihcaddbggejaffkhkhihkjkakhifdcgkgaichjfkeihfjaefejdjcdghafedbhhkfjajkgjbkdicaehjgcbgbhbgedhbdhkdaaaikdafkhkhjaacfgffifhdcdcdjeebgakigkjaibeajibciahafjkdggickaacigakagccikkfbbdbcfkibjgbbckeghdgiaafdhdjfdkkhbdkkfcdbbdfdggfhhjbdefkgabgaikfaababebjbkgdichkgfhafedheheckbjfbadhfkhhcfjbgaekdcfachgdbbjgggkkdehbbkgkijbgfefhcgaiadbiehkaiaikidaafdgiidgabfbdihhfdcgjbbacibedgddbgkekhjkfijbadabfbgfiifhjfjhhhggjfhcacjhgjhkdjghffaagjkdbjejfiidakaeggaheiifdecbjihcbgkdgghadkgdfdickdkkfadjhjecchkckkafagjbkcgehfjcikgcgfdichadjfdaiffdjfgefbfhibfbjdckhdjiiekadiiceihkgihfdggjdckhbgkicedkjkdcaahigkejagbbhjgkdaaiakiededdfibbadffkajbadfcfhdaajjecaejghbhgccfkchkkabbacfghcjeihdgijcahhceefkjcfagbaecjjdkhgafheeaijkegefadbiaabibfbibadhiifgbddbhkjccccjjgjddiafaefeckgffkabdfbcgbhfghkbekkajcjjbcfbdadckjefaedjfidbdhfbkaihjigibfajiihaaiedfcjidjiikfbiggbifjfdigicgbdejjfjaeiiahigfhakihfaabgdfkeeiidfhiejkkddbhhjikhbbkidfbkejjbihkiigadheghcjifhiciadjgdfdfkcbichhecdcdeddechieaiiabfeeeajedgaibejgabfehfkgiajfbegebckeiieibekbhiacffbjkhkfgkceffbidiaghjjkabhaakakdebcgfdjbchbbihcbcdchibgchjjihdighbaacafgjehjdjajfjdhjjkbahbbccjddifhdkididgckbahdifgiagcejchfbdgiadejhegeegdbfjgfchbbcieafcdkjkekjigebjchgjhakfgegbfbjifdbaedcdibagkcbkibiebhbcdgjbcacahgkfafddhgeaibfdjabjbijhjjeifjbjhgbijgjibikhbedbkfdfacbcggeafegcechdhbdihidkhibdaagkcebbkddjagiijeadbkfigkhfgachihkddadchbehjagkbebafbciaeakjekgjgjeachfhaedkjhdijcbicijeahgjdjijfkkfacfaegedffggefdgaejciaebagkagdefjigjhhbgkigaeaajjkgfdghhbibdbkdfahccigkgihdcagjgcfdecejjcfdbjkebbfaaadjkbbbjckjgdhjjkeeebecgaghcajgcejichbadcebeafgdbahidejfdicckbkefededkgigadhecbkcihgbgjggkhcchiihajciafejkkedidjaakfjdieiccidkdakeffeccdeadgeaaajgiiejgjbbkfcbegdgkgceciefkhfacgdihhehcdiajjeijabbaicgdcfhkdfbgdcgahcfjdibhbbcgjjacgakbejkdbfcdhheaeddjaciedgjceedjfihakjakdfebcjagaeifjcfiackdaccjkhcffebhigckfifjfagkaehieibfgebhkghfbdkfkbakgfagihdaecfhidhgcdjdebhhfagebikdjjekbkjfihciihjfbcakjfikchhaeddhgfhfcdkckkahbkjdgeffjibbgfjkhihbhcefhkddkkkgifddiffihkcgkhhbgcckiiggcikikfgdebcgejhekfgehcbkhdehdefiiaiafhicedfikhjfgbeedjaefehahfkhcigcgbdbiafaggcdfaghafffkcagciajkgjekhfeficdfkjkciefegfhdcejcjfhbgbcchbgbdidejgaabggfgdddgfgakjgfdjfhjbiahiaidekcfgfdahehcfiefdjbehdahajjibgjbigfbkfkjeehdhjeabhhiifeaghjhcghbbceeidbcfiiiikgaafekgbdaicjjbeafbkfbcfhbkkgfjgikghiggadfjgaihkebcdiicafaagibfdebeakcbkiafcidchhhchhhggcjfkdjcckckfkehdfkdgfffkdbjccjfekbehkgkcicbhfbfcdfhidchjjebgcdbikkjhbbaichdbkddddffdfbdacikgdjfehfbjajfkacckceakejhfcfcjdgdkkakafdjhkdgdcbajbjjcgaabadkdhfbckgfacahkbbdfbbceacigkfbjkbfhcjhaehjgigbefggcckgjbdijjdkgkfdbkciijbiieicegfkekkigckifgcjdhefadbgfkkiffahkkhidbckdhbefjkcagcadjecbcjdghcajjbeakgediigjhfehbjjhiefidacidkffgikcgedbbghkfdhcgieefdecdffijhgbjchfedaiffejcjebfgffjbkggejajeegjhbjkggcdkiabbgdbkbdichcbfakbhfdeediaefhecidbddadejjhbfchhjebaeiihekbjijhgaafddbgcfhkgfedfggcideikadkhfcgfdjjdbabhbbkgjffggbcakjgdaejdjjfcddcdicfbbkgfcickihgkgggeegefefbhegefddhcagiefejajkigcfiichjdigadjjfbegcghgfhhdjcabjegfadfeeecbgadchejcfehgijcjjhgbihgeihacdfcgifhifffiggijgjcfaedagjceiigfedgihcbegacbfiagibejciikheffcdjbedbkbkeecgdiffbcejjaffdkhecejkejbkgfkdkgifehikbcdgcifgcifaefgafbbkfagjdhekfjecdehfffkkjdibcbakikkghjekgcedaigcchkcjkeciccedcbekkdbhajchjjichjjecajaeafgdjceiibihibcbecgjkggchfjkbfhhgchjhecdjiikdfcjijabjdjajkcfbidaeehadgdkhedbbbaahbkfdeakaibgigjefgkedahcfaacfhajhjahbadckekgdadfgjeciiackbjcbkgagbcbabgbkejidkijhbchajhigkkghkhckjgjghjhkkgabgkjcijffeidaibfdhhhbkabehchgehdjgdiibihhdekfkahkcdhgkhiijiakakgbcjceakefgcbkaeeecbbcbigefggkjkhgkfbkadefcjkdcfhacfiidkjeiabbacjefaajaikeaebkfeajggedidcgacfagddidjcggiabkedbeckeffbkadecibfjjacibjkaabhggjbfbgdijefjejadbdbekfaebjkihebegdiafcadikbjkbaeaiaaehkgejkcfbhehihadgiafehjgdibiaedbafbbhgiejdehhkaaceidhiicegejdfcedehfdkgddghdccjjajbeiabdgccbaikagbkkggahibbbgakkdfkfkefhiededekcbigjigfegfjkahhaecfffeggkekbgjjcajhkgbkifejikhcidbckjeahihhgffikjddgcfkhdakicaidkgjhgiccgecekgiihkjbkdkfbdeifbhikhfdkejdbdjkbibfghdjkahkdjbifbgiaeeiddcfgchbfhjfddfdgjhbhgdacifabjcjdchdgkjiccjbghddkkhfhefedjkegabhajficekjjedcdcdkhaefghifdiiakdhjgidgdjgdefabecafakkcagfbgejgddjkcafbcgddejdedgffbcakfgjjcaaecdkkagidbbgfcijbkbikgkijidedhddffgbjbbecgfkikijkdecccbhhiagadjedadffefkcfiigdhfhhibfhiddkjkgfgcghhkdkgbgiikdgkibgekkagcecejkdkhigijeeheiddbkdiajbikghcgiejckieeckkgkbebdbbdicfjbfabbbkhfcfeggeaagfffciihkcjhaffcdceidiaghakbcikgdjabdhbedggggecageegahiifdkdcgibhcihicgbchddcfeadjgcjgcaggfhehbecajefadkacggfchgbfadjcjbijfdgididikbfcfchbdekcbgaefdcdeiaggdaefcaigkfegcacadjjbbbhhcacgajfjffjkefjedhdbeeabgehdgieciefdibeaaicgiajcgfkhgiakjadgihaifeahfgehdfeehcajbcghiefgcdbkhaefcbkccgiikdciibabcbkkdghhiikejeifhjfhiikjcjcekdeijbkhggijhbgkkjakfbkdkibegjgggdbibcbkjcebgabdkjeagjceggabiaddgjdiikejifibffhigkikakjagkhihaahebjjgaegjcbfihiikgbhhegjkijfcffikaejfbkkgbccbfcaabfffdafgbjgikfffggjcafjhadijhhheehfefjffhhbjejkfdekfhcaafcbfhfchakhaedbfchjackeccggebdagkiaffebghbhkggjdbcgafekbffiichcjfhgkjkieihhbkbfebifefijkggaifgbfbdgejheidebfbhjjihaghiabebekcbcdekhgebekfcbfjbjfikfdkckbkkhecicjkcdeehieackgjkafkbdegjkegchcahdjehdfeibhijbhehegkjbjffijkibghcgdhibgdgkjajbehcffifkjaigaibdaggajjfcbfhkgekkkckhjdkjjadchabdjihhigcjkcigbijgfgbjdjihbgddeekbkdhgfegeckbcgjfdgkdaggkkkjggibgeedjkiebiijbhbchfgheijabjckfhgfckccgieaakhgfbfidbggeicciieghcbebchaifikjbcekfdhgiehaeagbhcedideefkjhcajkeaiakcebabjccijigedaeiegejihfcfghcjhadiihfbjdfhaiaghhkccdfejfceccaabeaibbdbdjcaadifcffgkgadajhhihdadgdchgejhhdfjaffhdhfhcdhbckfehcakjhaheddiejbcdhcebakjcbebacgkakfebdddkiadcefihfbkgfcccecjfbkhhafiabdakgfjdifhdebkcgficeicagegeigbiabgiibicibdadjeifjkjheejhhahicikhghkjfjchcjhhjkfdkbjeadccaaaafhfhgjafjaaabbhiehcfkhcfikafdejjcadcfcegbfggaadidicidbgfkhedgciceddkcbcdkkhcgebajggdcbfgkdahdahihkdabjjichfbbgcfhafchjedaieccdbagiehkkbkdbhihckgjeidceafihdgjhkehkjibcbdeijhjkdddbjdhdeabdeiakdefjabajghajicaheheddaibfgdijgkefgiffddfkfbfiedhdeadkceehcbcbbiiedkdhfidjafejaggjiededhdjkgfjdaabfkbbcdkkkdefdiejgfjiajfbjffbfikhifaekcbabfhaedhcgdhjceebikacbfhhgicfjajcejdakedefbiggjkbiifijhjghkfjchhijagjfaeaiceccdffajcfjdjjhjfidckdbfiifcddjechdcffdjehaefkffiiadkagifhfaijckdefdfgakbgcifkdkjjchehcgcdjcedidffkhjibakkciebchcfehckfejhcijacijcihbejgbbjcbefgdihhcajekgbakdaeigkdhhabakickfgkbhbdbfgdbafafckgdekcgaacfccaafikdjbkfakiejghdcichfkdeckkibkcfkdeceefkgfkecehkfihiegikikgbdadceifceiejdidkihhgihikjbjfaahkjafhbbdkaagkhiajkacfjbbdkbjcgijdgcjjhhjdcgekfabagfcekgabcekfkhgichfiihkkafjjhdkebkchekcebdjighgkfaeijcgbfckedekhgekadikaiigagaacgbidikdicgeadhkkgcfjgbjbkgaaaejjddghbieidigggdgkcfddbfjahgghfcjjghcdcggafiakbighfbdcadacehkbdaaejcjdhcccbbkjhhkbefkjddaefkejejceahdkkbfkefggcjhhaejckcecajejfffajhkbdigcckefhcjfgakgbffdjaagdcdjcidhfjbecidcfccjjebedgikcehkicbbcacjgffdcgkcibdbhbijfhigdfaajbhbddcfeckfgecbbaddffkeebeidbhfjekdjfijbbjiadibdkdcdbcjfkfkjcdhdifjbebaahcfkgcgdkjfahjkcgjgickhfdfadkgcfkiejbdfabhgdbdijjdfjifhfajiaadfbdfbhkhfeagbiekjcecdkdbjeiaigcckhfcaeddbefbbficgbakkdehdccggkgjdidhbbckhajhcbgkdhikkadgkckkdkhagaaickafgfjdjcgjhcghdbadccafijicgcgfdfijajejdhgckdjbaeadekkibagaakkgjgfkakgaabikjhdhedfjekbfcjhecdkkgfbafeegfddgkigbefcgggikbeakbbefeacbcdaeadikiekeikcdehhgkfidbibajckgajicigchighkkieakkdbbijciggkkjedhigcbbbcgbdehaakkghkefcjejbbaeebkghafahekikjhkgeeddchbgfiekbbfkicfkfgfdeckkaachkdiheeikhcieggdikcdbeigejhggkaiddfffcbefbekkjijchgkdfjdaiebhhggikibgjfgijcidecekbgjhaikeijeagkbfdekdgbhkadfkekjddfdicechabedkdajfgedeahdchkcajhfgihbgiehjkikjhkbccjhakgekfjjkehfjfffjcfdeddggidkbkcddgdaehhdehjdkjhdjkcaiaiahfgegacjigikkbkgakdgkbccgcggfckeghajagfiikgijcjafeajkkdeafdjkjgkhekccfegfbgbcijfffajhegifcfigdbhgjgfdgafhkcaagkdcdhbajbiakadgdhjgacfkiefbkcekkeaeckigkkekajbajgibaehkfcjgchfchdfdejikckadhbhijbkdcddikkbbifcijdickkfajjcckaikijkgdcfadgaicghajaiabchdfhjfhjgdhhdgbkcgfkcghjhckdjhaajbjhabebbgjhdejaejjihgjjkiadehbeaefidajgbahihjcjhggcfighiieejafbkefjdddbciibjkdfkaeiefhabaikeicchehahhaedjfagigddkeabjicjikbjeakkefggbgfkaebdakcakfkabgjkjciihhkdebehjiaaebfhkdgikcefhacabakhejehkgjeikieihekjgkkghkfehbfgfdgddhifdfcbifkgcjgfefefdakibjdahdgbiiddcfbdcehbefadaibcibgddfhddkgbcjjkffkbhdbkcgfkjcaaajacidagddajdeacgafajgdgcjikafabecdegkejeehkacafffcahcgijhbaiagceaccjajbjgecjggbjcjechdbihckdcebgbgekigaedfbkdbijbejfgkejcdajbfhadhjcfckaajihjhhhhigjechdjidkkedkkkbgkfdkdachbhgbchkdefbjdifbcieiifjchhcjihgkfbgdfhfkgfgjgjgkickgebkbjffbafcffebidjfhfidhgbhbekaabhkdggjgbjjcjejhaachcjkfcfhehaedgibdakcbjejacbbifabgfcbjcjkfabfjajeidifcgehfgefajehcdfeceidiegaekhfebiakdibdiadkkkgbakfacabffjkfgfdffkbgjfhhidcijcbkgjdhibghcjaebejjkfibiicecjdekghehidiafcgcdkbbahbaadkejjfgkfkbakcfcjikcedhfddhjieabegafebicgibkkdbhcffcgeakaebdjgbkaihkkhkbgkehhefejjkhidbebekeifgjbkfddechhbahhekjhhegjhikabgbjdiffajiabbkggkikdifgeedcbaiecebciahjbgffcfikckjgedjekghdjikdgbadffddfjckhjfkcaecjfgcgkceeghjhheabfckfbbhagdiigjijeakdbdikeijiaibgjehkdhgihdjkdbaghiikidgdjijejfhdffigcdfdkggbhfgghkkdgehffgbiaihckiijgfdfhfffjikkejeccidcjijadhijaiafbcadegjdfdjeedhkajkigbheibikefcegfijjhdggceaedififigkakbgickjihjebhhjffcjjcfefedafdjhabjihigfkekfakcjdibehijgekgbfeghedabjhaakijeecddbdjahigiijkhehghjbcdgjdgcgbkkgbdcbgcfkchckkibjjciekdfdcaakebccikajkkggdijhdafkbgcgcjghhbhccebekdaihaecfifhageeddaihgjikcecedejcekeidafddfiieaakhkggkejkffahbfhfikhibhaeeafaeabkkcfhjbfjbchdkhkgefikefejeejcfhdfffadhakjegcdbkhhjaiddgajhgdhdgeiifkekchfkcdfbjckdhfjhhgecbcacehjikbhafakfhkfaecchbkjgddaggkkddcadjkjjkhfceafjibigakedcihccjfcghekhbfiabbfabeeijbifibiiddaeejghkeeefiahchgjkdifhkeekdkfecijdgkaiibgdageaefjhjbdkekicfaafikdgdkjhkackdkigbaeeehgcdbiicfiabfaaihhjbgcagdkkajgdbgfdikeccdchgahbidibbahecdhakcbkbkdbajgefcgbbdcaagiiajbgjhigaekcfdbejacdcbejgjkgkgcffhjkjkccafaegagiacifabkkjjejkkiecieaegcjffeihdhghhhbbjfdaeihheedebfdhgkjkcaekbhjdfgfbijkdjhkgbeejbifhgkcebaicghjfchjabkbbbfaffgkhaedjdjehefbcfdedkgfadiageehihcbjekedjkjegcfckkaijahkgfjkbkehibkijhjdbjjdfkhdeijgfedhhafciiccdccghkdbfdebcgefchehjjccdgjeihchbfheechhikbkjecdbikbjfjkgcikehbdadgehbaghebdkkjejefacakjadbibagkibfjgjhfkfcikfgegfkbecgehbhgieabhfaefjkjgheiejdijhkabdkdciicaibiiadbceccbhkiacbafadbeccbggckeiabjgehdachdgcdhhcekibkhbfckebjjfcfghghbcikckcgfahhbigfbeejaaiceebjeeegijafjhhjbidieebkkhdbidibkkkfcbjijbebebkdffcakfdgeckaheahaefgbiejbgahfkgaficggbffcgbhkifbchbfdjikjbaafchcjdkedekjhigijhjheeakffejhkaiiecffecfbkkgcdchbdgdbkhdjjgejjekddcgfdjigcbgicekaajhbfbaciejikadihhaaiebgbifdkfkgeaghihkihdbgbhfafbkkjjgdiehaeedhbeaiabcefbhajkcfcediffhfadfhagjajhfeieccidcigbjeefeibcebdehcghbcaeefigefcjkjkakbbiaiehkgfkeifahaicbidbaahjjijgjiehhdegfiaabjgckhjhaekhahiikgdkjgfgjegaechjdichbchckcbfhghgbdcfbdhjfiigfdcchfeecjjebehacheciegiececkbbcdbchjibdibgjjbbkhjcedbgaiibbkkgfkfhfhdfdjbdgggiifbigaekciekfdckehihadecchcjegjabkhecikfhkjaaahkkegjiejdffdkhdgbjidkhbcgjachfdkegkieiaickidikbdfdfgdbaabfkahbbicbebbdiffhikidkakhejijfdkccdkihaceffkhgkhfkehcabhibbdbcahbiibkicajegbiiicjebjgkccejcjddbbgkiichbbhddecadhggcajdkicjeakckcdeigdaaeiaeihdbhejhjkfibkeajhecbabejjgfdgjhhhgjaiddjcdjhhcebfgjafaeacggeggkjbbaefcfdjihddbfaddgifjcfekdifgiihbbiejgdddiaceaebcfjbiiechbiiaecbjkfjfjhbdajfghcgbbbbgfafhiedabddaadjhjaadhfjfbaaiheaghddeifjdjagaeebdjifcidhjcjbbbegifccjbhfiedcecihakgbfhjagghhijbdajfehhebghejakgciicggfbbkhbbdkeheigjajkfjgjiajecfbdefdbbekhdgijbkcbfdihadbehjdaifaiihchjbagcahecjjghecijcabdickcggighjcciefebfghaeffdhbaajifigjkhbbgidbiediakaiakhfgfcbhchcajbdchbccgffehkcbbikbighcjgacidjjbbhcbjaagebkecgdbiffbkbeagadbciaagkfhfiighbaagchkaidbggaicgfakfgjehghfkjikkgjcbbehiieefdaadkabbbcadjjfigbdcjdidbbcbfkbadcjfeecajagfjjhkkigaghcbgjjdkabfhkchdjhgjhaaecfdchkjhdgkfdghaejkchggdfhibibhfhabbgcekfhieffdkfdjkgkehkhkkbiddhebjjbcbjbbeeibagjjbfjiciajgaeikjjebakjchdikcjkjjhijjffgagjfbfjadjdkeheaadfaffbibgcfdibeekcghgecjgiechebbaebdhfdfhgbgbaicahkhfeicgggijgbkdacejhiiegikgbbgebhgecedgecgighbcgcbiaechehjfgffdijfkcagkcabhabegihaafikbbjacjffakdfjebigaajfbihbcfkhbkfdkhhegaagahfcifbgdhhbhkcgechbefkjcegeecdjgjjcjfeifcbgcjidcacegcdiffkejbagiikghghahdjkdjkjkeajhjffgikjbdcigcdgbkbccjkbddjbbifbidhdebbafjhahhdggeaebbcdfbkhbcaeahdcddaahkfadcafgebhbcdjaajccdbkhkgibadaeicaiefhehjeiikfggcceadddfggajjjfeibbgefhfjcceefadidjehajddihefjkgkeagffhdgbbbbhdcefcahbaaejjekgfibdhiecbhjkakbehkdaaekijggffaijdbkfjiibgkiekbdbjdcjbeaieeejkgjijhijcdebkdjeejfcadikiggbhcdhhhjbgfejacjgecdgeiaichaihabkichdgiifbjgcckgabkgjecigcefafkedjecickcbkfdcebgekekbaijjaekaibaafeeeffciikhfddfaebgjdijjjaefbkbbiaiibjgejebbkgccikaiffakcgbedjikefjjkhedijikdhgcdajajgffhjhgehhefdbfbdhfbikcjfckgecgajfakkediaieikegckccadjfhbfeeddbjfbkfcebfddhahecdbcafiadijaecjaffikhdgcccffbcekbeciedjjcfigjkkgfefaffehfhgdbejkdhcaccikgceakajkbhehacbegbcgheahicdcgbhibjjkdhbieidjkbkheccafckhfbdkfckjjbdkejjefedieaffffiaabjedcfebhdaigigehagkfcggbgkikgbibhjceikidcdejcigihgfiekdfaigbkakahbjbfiigejciejiahgceiakieebaaifijkfecghheaeckdkcddjcafgckhihjeccfaejgbcibckfbhdabggjadjhbfiahgiggfciackgjjfjibckfdagfefjhckiiaifbiefkhbbheigbiihagagabefgdbbiahdccgkcjfhbcjhcjdcbdfkjekdiahbhfhaidkjgkkkdhcffidfgaeiahibfeaekcfhgigbbdekffekiaiafjkfafjckckjdhjjjfeidcichbbeffbfidjdkiadbddfdkjgdhhffijfeihagdfkbahfifhjddcichjihfhgegkdkadbkbeciabjdjjcgkhfgiaigcafiibbikiggdkehecedjckhfigkbbkfcjaahdjagdfcaeicibgcajjckaicbhjahjadkdhkiggebjiggadgaggcbcahbjkigdhkcdhjbjebjkjkebegcfdfkickbdkhhdfbcgdbkgecjdjggiebdicdbbfhagcdihhfigahfckdgkjeahgkiikcfaikkajehadjcbhidhkjeidghiaijicdhkkcefjjaefckckbfeagicghhgkdiihbdkdfkaihfeacbfhkhgeaihgdbiieiccafjcgaijbkccgcajidkbgeffhjbajhijjkbiiikikicffcdjkkhechcegcggghakggbdgjbkbdkabhagkkghhkechcaeikdeaecehjdhbjddjhdddjaeaacfehdhihejegcbhababahbffdbhikkhjdijijabddfdbgdacjbgeaabjdhkjjdkifaijhdeejgbbjkbaihddjgifghehgcgjhfjdgfdkajgjedcjebghjkgkifcdhehfbabbcdfhbagabgibbcbafihhkgggebfafjjhjaedjgkakejjigekckjagjehcdkfbjfadbbkdhcggcjgiagkgkjhgidjkkdddhbacdkgbabcbffbbeggakcgbbhfgikgdaicchgaddkaehhcchfabgdkfhadhcggcedhdkhafheddadfghiedekgggedcfhkdidiegdbicffdkdjbghjajjfjjhdeehjckcefbhigiegbkefehdefcbjfiidedcccekijfkakkhechjgebdajkjgjbfbjhedbhjbeghaggifjcbhkfbgabjjchijefkkacicfjhefigchgajhaaeebefehfghbgfdcakgfjagiciigcadgbfcdbjfefficaabhddkfcfbkdbifgjiifebgdejbjhckaejejdijibjfijakahaaaheffjfebifghjjkhiakkkdchgfeehfbihbkihfhigbaddjaffadbbgbhchgifaigjadjecbjccbbefbdaddjcdkdhejdadbhhfafbeahhbgfjfedhekdkiebiikjjbdfghfkabiahffbghdhgdkdckigjdabegbjcfjcdgkhkgeagbgjefgiggegfdekejieabjbgkjahgcagkfjdfghbebdcgdfagdkaabhgedidjkgiaihiheagcjcdegdehkbbhafkgccidbgijebecgjieebehfkbiehakcegiedgjedhcbjbibjaejgbbcejjehfjdkebijafigeakehgcabegedhkjikacbhjhjcehedjkfccafbjgkdfadaikcjchfdjbehdejfhbhfkgjdicfijdeihbhhfcaihhjheigcdfeehgcejbaaicjjibaaiadgdbkbhdcikkeiidhefecfffafjkfhgbkbhkbkccdgcjkfbfjhaebgbbikdfbhieakjbkifehecgajcjcgjakjjfdkekabgjkjkkgfifeibfcabkcehjafhcgecghhkikaidgejbdbjcijidjckgaiiiahcgcbdkegfjgaihedfdjeejddaeiedhddhcgfdcjkejffbdhagfhaajfgjkakcdfcdijifidhbgaafihkkijjghakkkjgibcfdkacejjkfefbdfbcfgdhdfhcfdiebfccghdjiefdhcjadihdfhcbhkfkhdichdagbhheadcigcaejkfehgaccjabahdkhegabeahbebbkgfadbjbfibjfefdhcf"

if __name__ == "__main__":
    sol = Solution().maxFreq
    prt = lambda **kwargs: print(sol(**kwargs))

    prt(s = "aababcaab", maxLetters = 2, minSize = 3, maxSize = 4)
    prt(s = "aaaa", maxLetters = 1, minSize = 3, maxSize = 3)
    prt(s = "aabcabcab", maxLetters = 2, minSize = 2, maxSize = 3)
    prt(s = "abcde", maxLetters = 2, minSize = 3, maxSize = 3)
    dbg()
    prt(s = string,maxLetters=3, minSize=1, maxSize=10)
